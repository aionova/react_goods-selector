{"version":3,"sources":["components/Good/Good.js","shapes/GoodShape.js","components/goodsList/GoodsList.jsx","shapes/GoodListShape.js","App.js","index.js"],"names":["Good","PropTypes","shape","title","string","isRequired","id","number","func","arrayOf","good","selectTodo","selected","className","type","ClassNames","includes","onClick","event","GoodsList","preparedGoods","map","key","index","App","state","selectedTodo","metaKey","ctrlKey","setState","filter","clearSelected","this","join","React","Component","ReactDOM","render","document","getElementById"],"mappings":"kTAIaA,GCDLC,IAAUC,MAAM,CACpBC,MAAOF,IAAUG,OAAOC,WACxBC,GAAIL,IAAUM,OAAOF,aACpBA,WACSJ,IAAUO,KAAKH,WACjBJ,IAAUQ,QAAQR,IAAUG,QAAQC,WDJ5B,SAAC,GAAD,IAAGK,EAAH,EAAGA,KAAMC,EAAT,EAASA,WAAYC,EAArB,EAAqBA,SAArB,OAClB,yBAAKC,UAAU,QACb,4BACEC,KAAK,SACLD,UACEE,IAAW,aACT,CAAEH,SAAUA,EAASI,SAASN,EAAKP,SAEvCc,QAAS,SAAAC,GAAK,OAAIP,EAAWD,EAAKJ,GAAIY,KAErCR,EAAKP,UEVCgB,GCDIlB,IAAUQ,QAAQR,IAAUC,MAAM,CAC/CC,MAAOF,IAAUG,OAAOC,WACxBC,GAAIL,IAAUM,OAAOF,cACnBA,WACQJ,IAAUO,KAAKH,WACjBJ,IAAUQ,QAAQR,IAAUG,QAAQC,WDJvB,SAAC,GAAD,IACrBe,EADqB,EACrBA,cAAeT,EADM,EACNA,WAAYC,EADN,EACMA,SADN,OAGvB,wBAAIC,UAAU,SACXO,EAAcC,KAAI,SAAAX,GAAI,OACrB,wBACEG,UAAU,cACVS,IAAKZ,EAAKJ,IAEV,kBAAC,EAAD,CACEI,KAAMA,EACNC,WAAYA,EACZC,SAAUA,WECdQ,EAbkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGoCC,KAAI,SAACX,EAAMa,GAAP,MAAkB,CAC1DpB,MAAOO,EACPJ,GAAIiB,MAsESC,E,4MAlEbC,MAAQ,CACNb,SAAU,CAAC,K,EAGbD,WAAa,SAACL,EAAIY,GAChB,IAAMQ,EAAeN,EAAcd,GAAIH,OAElCe,EAAMS,UAAWT,EAAMU,SACtB,EAAKH,MAAMb,SAASI,SAASU,IAS9BR,EAAMS,SAAWT,EAAMU,UACvB,EAAKH,MAAMb,SAASI,SAASU,GAEhC,EAAKG,UAAS,SAAAJ,GAAK,MAAK,CACtBb,SAAUa,EAAMb,SAASkB,QAAO,SAAApB,GAAI,OAAIA,IAASgB,SAMjD,EAAKD,MAAMb,SAASI,SAASU,IAIjC,EAAKG,SAAS,CACZjB,SAAU,CAACc,KAtBX,EAAKG,UAAS,SAAAJ,GAAK,MAAK,CACtBb,SAAS,GAAD,mBAAMa,EAAMb,UAAZ,CAAsBc,S,EAyBpCK,cAAgB,WACd,EAAKF,SAAS,CACZjB,SAAU,M,uDAIJ,IACAA,EAAaoB,KAAKP,MAAlBb,SAER,OACE,yBAAKC,UAAU,OACb,wBAAIA,UAAU,eAAd,mBACA,wBAAIA,UAAU,qBAAqBD,EAASqB,KAAK,OACjD,4BACEnB,KAAK,SACLD,UAAU,cACVI,QAASe,KAAKD,eAHhB,KAOA,kBAAC,EAAD,CACEX,cAAeA,EACfT,WAAYqB,KAAKrB,WACjBC,SAAUA,S,GA5DFsB,IAAMC,WClBxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.08a8ffa9.chunk.js","sourcesContent":["import React from 'react';\nimport ClassNames from 'classnames';\nimport { GoodShape } from '../../shapes/GoodShape';\n\nexport const Good = ({ good, selectTodo, selected }) => (\n  <div className=\"good\">\n    <button\n      type=\"button\"\n      className={\n        ClassNames('good__item',\n          { selected: selected.includes(good.title) })\n      }\n      onClick={event => selectTodo(good.id, event)}\n    >\n      {good.title}\n    </button>\n  </div>\n);\n\nGood.propTypes = GoodShape;\n","import PropTypes from 'prop-types';\n\nexport const GoodShape = {\n  good: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n  }).isRequired,\n  selectTodo: PropTypes.func.isRequired,\n  selected: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n","import React from 'react';\nimport { Good } from '../Good';\nimport { GoodListShape } from '../../shapes/GoodListShape';\n\nexport const GoodsList = (\n  { preparedGoods, selectTodo, selected },\n) => (\n  <ul className=\"goods\">\n    {preparedGoods.map(good => (\n      <li\n        className=\"goods__item\"\n        key={good.id}\n      >\n        <Good\n          good={good}\n          selectTodo={selectTodo}\n          selected={selected}\n        />\n      </li>\n    ))}\n  </ul>\n);\n\nGoodsList.propTypes = GoodListShape;\n","import PropTypes from 'prop-types';\n\nexport const GoodListShape = {\n  preparedGoods: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n  })).isRequired,\n  selectTodo: PropTypes.func.isRequired,\n  selected: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport { GoodsList } from './components/goodsList';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst preparedGoods = goodsFromServer.map((good, index) => ({\n  title: good,\n  id: index,\n}));\n\nclass App extends React.Component {\n  state = {\n    selected: [''],\n  }\n\n  selectTodo = (id, event) => {\n    const selectedTodo = preparedGoods[id].title;\n\n    if ((event.metaKey || event.ctrlKey)\n      && !this.state.selected.includes(selectedTodo)\n    ) {\n      this.setState(state => ({\n        selected: [...state.selected, selectedTodo],\n      }));\n\n      return;\n    }\n\n    if ((event.metaKey || event.ctrlKey)\n      && this.state.selected.includes(selectedTodo)\n    ) {\n      this.setState(state => ({\n        selected: state.selected.filter(good => good !== selectedTodo),\n      }));\n\n      return;\n    }\n\n    if (this.state.selected.includes(selectedTodo)) {\n      return;\n    }\n\n    this.setState({\n      selected: [selectedTodo],\n    });\n  }\n\n  clearSelected = () => {\n    this.setState({\n      selected: [],\n    });\n  }\n\n  render() {\n    const { selected } = this.state;\n\n    return (\n      <div className=\"app\">\n        <h1 className=\"app__header\">Selected goods:</h1>\n        <h3 className=\"app__header-items\">{selected.join(', ')}</h3>\n        <button\n          type=\"button\"\n          className=\"app__button\"\n          onClick={this.clearSelected}\n        >\n          X\n        </button>\n        <GoodsList\n          preparedGoods={preparedGoods}\n          selectTodo={this.selectTodo}\n          selected={selected}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}